{"version":3,"names":[],"mappings":"","sources":["gravity_simulator.js"],"sourcesContent":["/**\n * Gravity Simulator - Universal Gravity and Elastic Collision Simulator\n * @version v0.0.1\n * @author Jason Park\n * @link https://github.com/parkjs814/Gravity-Simulator\n * @license MIT\n */\n(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nvar presets = require('./preset');\nvar Simulator = require('./simulator');\n\nvar simulator = new Simulator();\nvar selected = 1;\nsimulator.init(presets[selected]);\n\nvar $select = $('select');\nfor (var i = 0; i < presets.length; i++) {\n    var preset = presets[i];\n    $select.append('<option value=\"' + i + '\"' + (i == selected ? ' selected' : '') + '>' + preset.prototype.title + '</option>');\n}\n$select.change(function () {\n    selected = parseInt($select.find(':selected').val());\n    simulator.init(presets[selected]);\n});\n$select.focus(function () {\n    $select.blur();\n});\n$('#reset').click(function () {\n    simulator.init(presets[selected]);\n});\n\nvar $moving = null;\nvar px = void 0,\n    py = void 0;\n\n$('body').on('mousedown', '.control-box .title-bar', function (e) {\n    px = e.pageX;\n    py = e.pageY;\n    $moving = $(this).parent('.control-box');\n    $moving.nextUntil('.control-box.template').insertBefore($moving);\n    return false;\n});\n\n$('body').mousemove(function (e) {\n    if (!$moving) return;\n    var x = e.pageX;\n    var y = e.pageY;\n    $moving.css('left', parseInt($moving.css('left')) + (x - px) + 'px');\n    $moving.css('top', parseInt($moving.css('top')) + (y - py) + 'px');\n    px = e.pageX;\n    py = e.pageY;\n});\n\n$('body').mouseup(function (e) {\n    $moving = null;\n});\n\n},{\"./preset\":2,\"./simulator\":7}],2:[function(require,module,exports){\n'use strict';\n\nvar _$ = $,\n    extend = _$.extend;\n\n\nfunction EMPTY_2D(c) {\n    return extend(true, c, {\n        BACKGROUND: 'white',\n        DIMENSION: 2,\n        MAX_PATHS: 1000,\n        CAMERA_COORD_STEP: 5,\n        CAMERA_ANGLE_STEP: 1,\n        CAMERA_ACCELERATION: 1.1,\n        G: 0.1,\n        MASS_MIN: 1,\n        MASS_MAX: 4e4,\n        RADIUS_MIN: 1,\n        RADIUS_MAX: 2e2,\n        VELOCITY_MAX: 10,\n        DIRECTION_LENGTH: 50,\n        CAMERA_DISTANCE: 100,\n        INPUT_TYPE: 'range'\n    });\n}\nEMPTY_2D.prototype.title = '2D Gravity Simulator';\n\nfunction EMPTY_3D(c) {\n    return extend(true, EMPTY_2D(c), {\n        DIMENSION: 3,\n        G: 0.001,\n        MASS_MIN: 1,\n        MASS_MAX: 8e6,\n        RADIUS_MIN: 1,\n        RADIUS_MAX: 2e2,\n        VELOCITY_MAX: 10\n    });\n}\nEMPTY_3D.prototype.title = '3D Gravity Simulator';\n\nfunction MANUAL_2D(c) {\n    return extend(true, EMPTY_2D(c), {\n        INPUT_TYPE: 'number'\n    });\n}\nMANUAL_2D.prototype.title = '2D Manual';\n\nfunction MANUAL_3D(c) {\n    return extend(true, EMPTY_3D(c), {\n        INPUT_TYPE: 'number'\n    });\n}\nMANUAL_3D.prototype.title = '3D Manual';\n\nfunction ORBITING(c) {\n    return extend(true, EMPTY_3D(c), {\n        init: function init(engine) {\n            engine.createObject('Sun', [0, 0, 0], 1000000, 100, [0, 0, 0], 'blue');\n            engine.createObject('Mercury', [180, 0, 0], 1, 20, [0, 2.4, 0], 'red');\n            engine.createObject('Venus', [240, 0, 0], 1, 20, [0, 2.1, 0], 'yellow');\n            engine.createObject('Earth', [300, 0, 0], 1, 20, [0, 1.9, 0], 'green');\n            engine.toggleAnimating();\n        }\n    });\n}\nORBITING.prototype.title = 'Orbiting';\n\nfunction COLLISION(c) {\n    return extend(true, EMPTY_3D(c), {\n        init: function init(engine) {\n            engine.createObject('Ball A', [-100, 0, 0], 100000, 50, [.5, .5, 0], 'blue');\n            engine.createObject('Ball B', [100, 0, 0], 100000, 50, [-.5, -.5, 0], 'red');\n            engine.createObject('Ball C', [0, 100, 0], 100000, 50, [0, 0, 0], 'green');\n            engine.toggleAnimating();\n        }\n    });\n}\nCOLLISION.prototype.title = 'Elastic Collision';\n\nmodule.exports = [EMPTY_2D, EMPTY_3D, MANUAL_2D, MANUAL_3D, ORBITING, COLLISION];\n\n},{}],3:[function(require,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ControlBox = function () {\n    function ControlBox(object, title, controllers, x, y) {\n        _classCallCheck(this, ControlBox);\n\n        var $templateControlBox = $('.control-box.template');\n        var $controlBox = $templateControlBox.clone();\n        $controlBox.removeClass('template');\n        $controlBox.find('.title').text(title);\n        var $inputContainer = $controlBox.find('.input-container');\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n            for (var _iterator = controllers[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                var controller = _step.value;\n\n                $inputContainer.append(controller.$inputWrapper);\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return) {\n                    _iterator.return();\n                }\n            } finally {\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n\n        $controlBox.find('.close').click(function () {\n            $controlBox.remove();\n        });\n        $controlBox.find('.remove').click(function () {\n            object.destroy();\n        });\n        $controlBox.insertBefore($templateControlBox);\n        $controlBox.css('left', x + 'px');\n        $controlBox.css('top', y + 'px');\n\n        this.$controlBox = $controlBox;\n    }\n\n    _createClass(ControlBox, [{\n        key: 'close',\n        value: function close() {\n            this.$controlBox.remove();\n        }\n    }, {\n        key: 'isOpen',\n        value: function isOpen() {\n            return this.$controlBox[0].parentNode;\n        }\n    }]);\n\n    return ControlBox;\n}();\n\nmodule.exports = ControlBox;\n\n},{}],4:[function(require,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Controller = function () {\n    function Controller(object, name, min, max, value, func) {\n        var _this = this;\n\n        _classCallCheck(this, Controller);\n\n        var $inputWrapper = this.$inputWrapper = $('.control-box.template .input-wrapper.template').clone();\n        $inputWrapper.removeClass('template');\n        $inputWrapper.find('.name').text(name);\n        var $input = this.$input = $inputWrapper.find('input');\n        $input.attr('type', object.config.INPUT_TYPE);\n        $input.attr('min', min);\n        $input.attr('max', max);\n        $input.attr('value', value);\n        $input.attr('step', 0.01);\n        var $value = $inputWrapper.find('.value');\n        $value.text(this.get());\n        $input.on('input', function (e) {\n            $value.text(_this.get());\n            func.call(object, e);\n        });\n    }\n\n    _createClass(Controller, [{\n        key: 'get',\n        value: function get() {\n            return parseFloat(this.$input.val());\n        }\n    }]);\n\n    return Controller;\n}();\n\nmodule.exports = Controller;\n\n},{}],5:[function(require,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Circle = require('../object/circle');\n\nvar _require = require('../util'),\n    rotate = _require.rotate,\n    now = _require.now,\n    random = _require.random,\n    polar2cartesian = _require.polar2cartesian,\n    randColor = _require.randColor,\n    _getRotationMatrix = _require.getRotationMatrix,\n    cartesian2auto = _require.cartesian2auto;\n\nvar _require2 = require('../matrix'),\n    zeros = _require2.zeros,\n    mag = _require2.mag,\n    add = _require2.add,\n    sub = _require2.sub;\n\nvar min = Math.min,\n    PI = Math.PI,\n    atan2 = Math.atan2,\n    pow = Math.pow;\n\nvar Engine2D = function () {\n    function Engine2D(config, renderer) {\n        _classCallCheck(this, Engine2D);\n\n        this.config = config;\n        this.objs = [];\n        this.animating = false;\n        this.controlBoxes = [];\n        this.fpsLastTime = now();\n        this.fpsCount = 0;\n        this.lastObjNo = 0;\n        this.renderer = renderer;\n        this.scene = new THREE.Scene();\n        this.camera = new THREE.PerspectiveCamera(45, config.W / config.H, 0.1, 1e5);\n        this.camera.position.z = 500;\n        this.camera.lookAt(this.scene.position);\n\n        var hemiLight = new THREE.HemisphereLight(0xffffff, 0xffffff, 1);\n        this.scene.add(hemiLight);\n\n        var dirLight = new THREE.DirectionalLight(0xffffff, 0.2);\n        dirLight.position.set(-1, 1, 1);\n        dirLight.position.multiplyScalar(50);\n        this.scene.add(dirLight);\n\n        this.controls = new THREE.OrbitControls(this.camera, this.renderer.domElement);\n        this.controls.enableDamping = true;\n        this.controls.dampingFactor = 0.15;\n        this.controls.enableRotate = false;\n    }\n\n    _createClass(Engine2D, [{\n        key: 'toggleAnimating',\n        value: function toggleAnimating() {\n            this.animating = !this.animating;\n            document.title = this.config.TITLE + ' (' + (this.animating ? \"Simulating\" : \"Paused\") + ')';\n        }\n    }, {\n        key: 'destroyControlBoxes',\n        value: function destroyControlBoxes() {\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = this.controlBoxes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var controlBox = _step.value;\n\n                    controlBox.close();\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n\n            this.controlBoxes = [];\n        }\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            this.renderer = null;\n            this.destroyControlBoxes();\n        }\n    }, {\n        key: 'animate',\n        value: function animate() {\n            if (!this.renderer) return;\n            this.printFps();\n            if (this.animating) {\n                this.calculateAll();\n            }\n            this.redrawAll();\n            requestAnimationFrame(this.animate.bind(this));\n        }\n    }, {\n        key: 'userCreateObject',\n        value: function userCreateObject(x, y) {\n            var vector = new THREE.Vector3();\n            vector.set(x / this.config.W * 2 - 1, -(y / this.config.H) * 2 + 1, 0.5);\n            vector.unproject(this.camera);\n            var dir = vector.sub(this.camera.position).normalize();\n            var distance = -this.camera.position.z / dir.z;\n            var position = this.camera.position.clone().add(dir.multiplyScalar(distance));\n            var pos = [position.x, position.y];\n\n            var maxR = this.config.RADIUS_MAX;\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n                for (var _iterator2 = this.objs[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                    var _obj = _step2.value;\n\n                    maxR = min(maxR, (mag(sub(_obj.pos, pos)) - _obj.r) / 1.5);\n                }\n            } catch (err) {\n                _didIteratorError2 = true;\n                _iteratorError2 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                        _iterator2.return();\n                    }\n                } finally {\n                    if (_didIteratorError2) {\n                        throw _iteratorError2;\n                    }\n                }\n            }\n\n            var m = random(this.config.MASS_MIN, this.config.MASS_MAX);\n            var r = random(this.config.RADIUS_MIN, maxR);\n            var v = polar2cartesian(random(this.config.VELOCITY_MAX / 2), random(-180, 180));\n            var color = randColor();\n            var tag = 'circle' + ++this.lastObjNo;\n            var obj = new Circle(this.config, m, r, pos, v, color, tag, this);\n            obj.showControlBox(x, y);\n            this.objs.push(obj);\n        }\n    }, {\n        key: 'createObject',\n        value: function createObject(tag, pos, m, r, v, color) {\n            var obj = new Circle(this.config, m, r, pos, v, color, tag, this);\n            this.objs.push(obj);\n        }\n    }, {\n        key: 'getRotationMatrix',\n        value: function getRotationMatrix(angles) {\n            var dir = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n            return _getRotationMatrix(angles[0], dir);\n        }\n    }, {\n        key: 'getPivotAxis',\n        value: function getPivotAxis() {\n            return 0;\n        }\n    }, {\n        key: 'collideElastically',\n        value: function collideElastically() {\n            var dimension = this.config.DIMENSION;\n            for (var i = 0; i < this.objs.length; i++) {\n                var o1 = this.objs[i];\n                for (var j = i + 1; j < this.objs.length; j++) {\n                    var o2 = this.objs[j];\n                    var collision = sub(o2.pos, o1.pos);\n                    var angles = cartesian2auto(collision);\n                    var d = angles.shift();\n\n                    if (d < o1.r + o2.r) {\n                        var R = this.getRotationMatrix(angles);\n                        var R_ = this.getRotationMatrix(angles, -1);\n                        var _i = this.getPivotAxis();\n\n                        var vTemp = [rotate(o1.v, R), rotate(o2.v, R)];\n                        var vFinal = [vTemp[0].slice(), vTemp[1].slice()];\n                        vFinal[0][_i] = ((o1.m - o2.m) * vTemp[0][_i] + 2 * o2.m * vTemp[1][_i]) / (o1.m + o2.m);\n                        vFinal[1][_i] = ((o2.m - o1.m) * vTemp[1][_i] + 2 * o1.m * vTemp[0][_i]) / (o1.m + o2.m);\n                        o1.v = rotate(vFinal[0], R_);\n                        o2.v = rotate(vFinal[1], R_);\n\n                        var posTemp = [zeros(dimension), rotate(collision, R)];\n                        posTemp[0][_i] += vFinal[0][_i];\n                        posTemp[1][_i] += vFinal[1][_i];\n                        o1.pos = add(o1.pos, rotate(posTemp[0], R_));\n                        o2.pos = add(o1.pos, rotate(posTemp[1], R_));\n                    }\n                }\n            }\n        }\n    }, {\n        key: 'calculateAll',\n        value: function calculateAll() {\n            var _iteratorNormalCompletion3 = true;\n            var _didIteratorError3 = false;\n            var _iteratorError3 = undefined;\n\n            try {\n                for (var _iterator3 = this.objs[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                    var obj = _step3.value;\n\n                    obj.calculateVelocity();\n                }\n            } catch (err) {\n                _didIteratorError3 = true;\n                _iteratorError3 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                        _iterator3.return();\n                    }\n                } finally {\n                    if (_didIteratorError3) {\n                        throw _iteratorError3;\n                    }\n                }\n            }\n\n            this.collideElastically();\n            var _iteratorNormalCompletion4 = true;\n            var _didIteratorError4 = false;\n            var _iteratorError4 = undefined;\n\n            try {\n                for (var _iterator4 = this.objs[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n                    var _obj2 = _step4.value;\n\n                    _obj2.calculatePosition();\n                }\n            } catch (err) {\n                _didIteratorError4 = true;\n                _iteratorError4 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion4 && _iterator4.return) {\n                        _iterator4.return();\n                    }\n                } finally {\n                    if (_didIteratorError4) {\n                        throw _iteratorError4;\n                    }\n                }\n            }\n        }\n    }, {\n        key: 'redrawAll',\n        value: function redrawAll() {\n            var _iteratorNormalCompletion5 = true;\n            var _didIteratorError5 = false;\n            var _iteratorError5 = undefined;\n\n            try {\n                for (var _iterator5 = this.objs[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n                    var obj = _step5.value;\n\n                    obj.draw();\n                }\n            } catch (err) {\n                _didIteratorError5 = true;\n                _iteratorError5 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion5 && _iterator5.return) {\n                        _iterator5.return();\n                    }\n                } finally {\n                    if (_didIteratorError5) {\n                        throw _iteratorError5;\n                    }\n                }\n            }\n\n            this.controls.update();\n            this.renderer.render(this.scene, this.camera);\n        }\n    }, {\n        key: 'printFps',\n        value: function printFps() {\n            this.fpsCount += 1;\n            var currentTime = now();\n            var timeDiff = currentTime - this.fpsLastTime;\n            if (timeDiff > 1) {\n                console.log((this.fpsCount / timeDiff | 0) + ' fps');\n                this.fpsLastTime = currentTime;\n                this.fpsCount = 0;\n            }\n        }\n    }, {\n        key: 'resize',\n        value: function resize() {\n            this.camera.aspect = this.config.W / this.config.H;\n            this.camera.updateProjectionMatrix();\n            this.renderer.setSize(this.config.W, this.config.H);\n        }\n    }, {\n        key: 'onMouseMove',\n        value: function onMouseMove(e) {\n            if (!this.mouseDown) {\n                return;\n            }\n\n            var delta = atan2(e.pageY - this.config.H / 2, e.pageX - this.config.W / 2) - atan2(this.mouseY - this.config.H / 2, this.mouseX - this.config.W / 2);\n            if (delta < -PI) delta += 2 * PI;\n            if (delta > +PI) delta -= 2 * PI;\n            this.mouseX = e.pageX;\n            this.mouseY = e.pageY;\n            this.camera.rotation.z += delta;\n            this.camera.updateProjectionMatrix();\n        }\n    }, {\n        key: 'getCoordStep',\n        value: function getCoordStep(key) {\n            var currentTime = now();\n            if (key == this.lastKey && currentTime - this.lastTime < 1) {\n                this.combo += 1;\n            } else {\n                this.combo = 0;\n            }\n            this.lastTime = currentTime;\n            this.lastKey = key;\n            return this.config.CAMERA_COORD_STEP * pow(this.config.CAMERA_ACCELERATION, this.combo);\n        }\n    }]);\n\n    return Engine2D;\n}();\n\nmodule.exports = Engine2D;\n\n},{\"../matrix\":8,\"../object/circle\":9,\"../util\":11}],6:[function(require,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Engine2D = require('./2d');\nvar Sphere = require('../object/sphere');\n\nvar _require = require('../util'),\n    random = _require.random,\n    getYRotationMatrix = _require.getYRotationMatrix,\n    getZRotationMatrix = _require.getZRotationMatrix,\n    randColor = _require.randColor,\n    spherical2cartesian = _require.spherical2cartesian,\n    skipInvisibleError = _require.skipInvisibleError;\n\nvar _require2 = require('../matrix'),\n    mag = _require2.mag,\n    sub = _require2.sub,\n    dot = _require2.dot;\n\nvar min = Math.min;\n\nvar Engine3D = function (_Engine2D) {\n    _inherits(Engine3D, _Engine2D);\n\n    function Engine3D(config, renderer) {\n        _classCallCheck(this, Engine3D);\n\n        var _this = _possibleConstructorReturn(this, (Engine3D.__proto__ || Object.getPrototypeOf(Engine3D)).call(this, config, renderer));\n\n        _this.controls.enableRotate = true;\n        return _this;\n    }\n\n    _createClass(Engine3D, [{\n        key: 'userCreateObject',\n        value: function userCreateObject(x, y) {\n            var vector = new THREE.Vector3();\n            vector.set(x / this.config.W * 2 - 1, -(y / this.config.H) * 2 + 1, 0.5);\n            vector.unproject(this.camera);\n            var dir = vector.sub(this.camera.position).normalize();\n            var distance = this.config.RADIUS_MAX * 3 - this.camera.position.z / dir.z;\n            var p = this.camera.position.clone().add(dir.multiplyScalar(distance));\n            var pos = [p.x, p.y, p.z];\n\n            var maxR = this.config.RADIUS_MAX;\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = this.objs[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var _obj = _step.value;\n\n                    maxR = min(maxR, (mag(sub(_obj.pos, pos)) - _obj.r) / 1.5);\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n\n            var m = random(this.config.MASS_MIN, this.config.MASS_MAX);\n            var r = random(this.config.RADIUS_MIN, maxR);\n            var v = spherical2cartesian(random(this.config.VELOCITY_MAX / 2), random(-180, 180), random(-180, 180));\n            var color = randColor();\n            var tag = 'sphere' + ++this.lastObjNo;\n            var obj = new Sphere(this.config, m, r, pos, v, color, tag, this);\n            obj.showControlBox(x, y);\n            this.objs.push(obj);\n        }\n    }, {\n        key: 'createObject',\n        value: function createObject(tag, pos, m, r, v, color) {\n            var obj = new Sphere(this.config, m, r, pos, v, color, tag, this);\n            this.objs.push(obj);\n        }\n    }, {\n        key: 'getRotationMatrix',\n        value: function getRotationMatrix(angles) {\n            var dir = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n            return dot(getZRotationMatrix(angles[0], dir), getYRotationMatrix(angles[1], dir), dir);\n        }\n    }, {\n        key: 'getPivotAxis',\n        value: function getPivotAxis() {\n            return 2;\n        }\n    }, {\n        key: 'onMouseMove',\n        value: function onMouseMove(e) {}\n    }, {\n        key: 'onMouseDown',\n        value: function onMouseDown(e) {}\n    }, {\n        key: 'onMouseUp',\n        value: function onMouseUp(e) {}\n    }, {\n        key: 'updatePosition',\n        value: function updatePosition() {\n            _get(Engine3D.prototype.__proto__ || Object.getPrototypeOf(Engine3D.prototype), 'updatePosition', this).call(this);\n        }\n    }]);\n\n    return Engine3D;\n}(Engine2D);\n\nmodule.exports = Engine3D;\n\n},{\"../matrix\":8,\"../object/sphere\":10,\"../util\":11,\"./2d\":5}],7:[function(require,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Engine2D = require('./engine/2d');\nvar Engine3D = require('./engine/3d');\n\nvar _require = require('./util'),\n    getDistance = _require.getDistance;\n\nvar config = null;\nvar $rendererWrapper = $('.renderer-wrapper');\n\nfunction onResize(e, engine) {\n    config.W = $rendererWrapper.width();\n    config.H = $rendererWrapper.height();\n    if (engine) engine.resize();\n}\n\nvar raycaster = new THREE.Raycaster();\nvar mouse = new THREE.Vector2();\nfunction onClick(e, engine) {\n    var x = e.pageX;\n    var y = e.pageY;\n    if (!engine.animating) {\n        mouse.x = x / config.W * 2 - 1;\n        mouse.y = -(y / config.H) * 2 + 1;\n        raycaster.setFromCamera(mouse, engine.camera);\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n            for (var _iterator = engine.objs[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                var obj = _step.value;\n\n                var intersects = raycaster.intersectObject(obj.object);\n                if (intersects.length > 0) {\n                    obj.showControlBox(x, y);\n                    return true;\n                }\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return) {\n                    _iterator.return();\n                }\n            } finally {\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n\n        engine.userCreateObject(x, y);\n    }\n}\n\nfunction onKeyDown(e, engine) {\n    var keyCode = e.keyCode;\n\n    if (keyCode == 32) {\n        // space bar\n        engine.destroyControlBoxes();\n        engine.toggleAnimating();\n    }\n}\n\nvar Simulator = function () {\n    function Simulator() {\n        var _this = this;\n\n        _classCallCheck(this, Simulator);\n\n        this.renderer = new THREE.WebGLRenderer();\n        $rendererWrapper.append(this.renderer.domElement);\n        $(window).resize(function (e) {\n            onResize(e, _this.engine);\n        });\n        $(this.renderer.domElement).dblclick(function (e) {\n            onClick(e, _this.engine);\n        });\n        $('body').keydown(function (e) {\n            onKeyDown(e, _this.engine);\n        });\n    }\n\n    _createClass(Simulator, [{\n        key: 'init',\n        value: function init(preset) {\n            if (this.engine) this.engine.destroy();\n            config = preset({});\n            document.title = config.TITLE = preset.prototype.title;\n            this.engine = new (config.DIMENSION == 2 ? Engine2D : Engine3D)(config, this.renderer);\n            onResize(null, this.engine);\n            if ('init' in config) config.init(this.engine);\n            this.engine.animate();\n        }\n    }]);\n\n    return Simulator;\n}();\n\nmodule.exports = Simulator;\n\n},{\"./engine/2d\":5,\"./engine/3d\":6,\"./util\":11}],8:[function(require,module,exports){\n\"use strict\";\n\nfunction iter(a, func) {\n    var a_r = a.length;\n    var m = new Array(a_r);\n    for (var i = 0; i < a_r; i++) {\n        m[i] = func(i);\n    }\n    return m;\n}\n\nmodule.exports = {\n    zeros: function zeros(N) {\n        return new Array(N).fill(0);\n    },\n\n    mag: function mag(a) {\n        var a_r = a.length;\n        var sum = 0;\n        for (var i = 0; i < a_r; i++) {\n            sum += a[i] * a[i];\n        }\n        return Math.sqrt(sum);\n    },\n\n    add: function add(a, b) {\n        return iter(a, function (i) {\n            return a[i] + b[i];\n        });\n    },\n\n    sub: function sub(a, b) {\n        return iter(a, function (i) {\n            return a[i] - b[i];\n        });\n    },\n\n    mul: function mul(a, b) {\n        return iter(a, function (i) {\n            return a[i] * b;\n        });\n    },\n\n    div: function div(a, b) {\n        return iter(a, function (i) {\n            return a[i] / b;\n        });\n    },\n\n    dot: function dot(a, b) {\n        var dir = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n        if (dir == -1) {\n            var _ref = [b, a];\n            a = _ref[0];\n            b = _ref[1];\n        }\n        var a_r = a.length;\n        var a_c = a[0].length;\n        var b_c = b[0].length;\n        var m = new Array(a_r);\n        for (var r = 0; r < a_r; r++) {\n            m[r] = new Array(b_c);\n            for (var c = 0; c < b_c; c++) {\n                m[r][c] = 0;\n                for (var i = 0; i < a_c; i++) {\n                    m[r][c] += a[r][i] * b[i][c];\n                }\n            }\n        }\n        return m;\n    }\n};\n\n},{}],9:[function(require,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ControlBox = require('../control/control_box');\nvar Controller = require('../control/controller');\n\nvar _require = require('../util'),\n    rad2deg = _require.rad2deg,\n    deg2rad = _require.deg2rad,\n    polar2cartesian = _require.polar2cartesian,\n    cartesian2auto = _require.cartesian2auto,\n    square = _require.square;\n\nvar _require2 = require('../matrix'),\n    zeros = _require2.zeros,\n    mag = _require2.mag,\n    add = _require2.add,\n    sub = _require2.sub,\n    mul = _require2.mul,\n    div = _require2.div;\n\nvar max = Math.max;\n\nvar Circle = function () {\n    /**\n     * Polar coordinate system\n     * https://en.wikipedia.org/wiki/Polar_coordinate_system\n     */\n\n    function Circle(config, m, r, pos, v, color, tag, engine) {\n        _classCallCheck(this, Circle);\n\n        this.config = config;\n        this.m = m;\n        this.r = r;\n        this.pos = pos;\n        this.prevPos = pos.slice();\n        this.v = v;\n        this.color = color;\n        this.tag = tag;\n        this.engine = engine;\n        this.object = this.createObject();\n        this.controlBox = null;\n        this.path = null;\n        this.pathVertices = [];\n        this.pathMaterial = new THREE.LineBasicMaterial({\n            color: 0x888888\n        });\n        this.direction = null;\n        this.directionMaterial = new THREE.LineBasicMaterial({\n            color: 0xffffff\n        });\n    }\n\n    _createClass(Circle, [{\n        key: 'getGeometry',\n        value: function getGeometry() {\n            return new THREE.CircleGeometry(this.r, 32);\n        }\n    }, {\n        key: 'createObject',\n        value: function createObject() {\n            if (this.object) this.engine.scene.remove(this.object);\n            var geometry = this.getGeometry();\n            var material = new THREE.MeshStandardMaterial({ color: this.color });\n            var object = new THREE.Mesh(geometry, material);\n            object.matrixAutoUpdate = false;\n            this.engine.scene.add(object);\n            return object;\n        }\n    }, {\n        key: 'calculateVelocity',\n        value: function calculateVelocity() {\n            var F = zeros(this.config.DIMENSION);\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = this.engine.objs[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var obj = _step.value;\n\n                    if (obj == this) continue;\n                    var vector = sub(this.pos, obj.pos);\n                    var magnitude = mag(vector);\n                    var unitVector = div(vector, magnitude);\n                    F = add(F, mul(unitVector, obj.m / square(magnitude)));\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n\n            F = mul(F, -this.config.G * this.m);\n            var a = div(F, this.m);\n            this.v = add(this.v, a);\n        }\n    }, {\n        key: 'calculatePosition',\n        value: function calculatePosition() {\n            this.pos = add(this.pos, this.v);\n            if (mag(sub(this.pos, this.prevPos)) > 1) {\n                this.prevPos = this.pos.slice();\n                this.pathVertices.push(new THREE.Vector3(this.pos[0], this.pos[1], this.pos[2]));\n            }\n        }\n    }, {\n        key: 'draw',\n        value: function draw() {\n            this.object.position.x = this.pos[0];\n            this.object.position.y = this.pos[1];\n            this.object.updateMatrix();\n\n            if (this.path) this.engine.scene.remove(this.path);\n            var pathGeometry = new THREE.Geometry();\n            pathGeometry.vertices = this.pathVertices;\n            this.path = new THREE.Line(pathGeometry, this.pathMaterial);\n            this.engine.scene.add(this.path);\n\n            if (this.direction) this.engine.scene.remove(this.direction);\n            var directionGeometry = new THREE.Geometry();\n            var nextPos = add(this.pos, mul(this.v, 20));\n            directionGeometry.vertices = [new THREE.Vector3(this.pos[0], this.pos[1], this.pos[2]), new THREE.Vector3(nextPos[0], nextPos[1], nextPos[2])];\n            this.direction = new THREE.Line(directionGeometry, this.directionMaterial);\n            this.engine.scene.add(this.direction);\n        }\n    }, {\n        key: 'controlM',\n        value: function controlM(e) {\n            var m = this.mController.get();\n            this.m = m;\n            this.object = this.createObject();\n        }\n    }, {\n        key: 'controlR',\n        value: function controlR(e) {\n            var r = this.rController.get();\n            this.r = r;\n            this.object = this.createObject();\n        }\n    }, {\n        key: 'controlPos',\n        value: function controlPos(e) {\n            var x = this.posXController.get();\n            var y = this.posYController.get();\n            this.pos = [x, y];\n        }\n    }, {\n        key: 'controlV',\n        value: function controlV(e) {\n            var rho = this.vRhoController.get();\n            var phi = deg2rad(this.vPhiController.get());\n            this.v = polar2cartesian(rho, phi);\n        }\n    }, {\n        key: 'showControlBox',\n        value: function showControlBox(x, y) {\n            if (this.controlBox && this.controlBox.isOpen()) {\n                var $controlBox = this.controlBox.$controlBox;\n                $controlBox.css('left', x + 'px');\n                $controlBox.css('top', y + 'px');\n                $controlBox.nextUntil('.control-box.template').insertBefore($controlBox);\n            } else {\n                var margin = 1.5;\n\n                var posRange = max(max(this.config.W, this.config.H) / 2, max.apply(null, this.pos.map(Math.abs)) * margin);\n                var _iteratorNormalCompletion2 = true;\n                var _didIteratorError2 = false;\n                var _iteratorError2 = undefined;\n\n                try {\n                    for (var _iterator2 = this.engine.objs[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                        var obj = _step2.value;\n\n                        posRange = max(posRange, max.apply(null, obj.pos.map(Math.abs)) * margin);\n                    }\n                } catch (err) {\n                    _didIteratorError2 = true;\n                    _iteratorError2 = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                            _iterator2.return();\n                        }\n                    } finally {\n                        if (_didIteratorError2) {\n                            throw _iteratorError2;\n                        }\n                    }\n                }\n\n                var v = cartesian2auto(this.v);\n                var vRange = max(this.config.VELOCITY_MAX, mag(this.v) * margin);\n                var _iteratorNormalCompletion3 = true;\n                var _didIteratorError3 = false;\n                var _iteratorError3 = undefined;\n\n                try {\n                    for (var _iterator3 = this.engine.objs[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                        var _obj = _step3.value;\n\n                        vRange = max(vRange, mag(_obj.v) * margin);\n                    }\n                } catch (err) {\n                    _didIteratorError3 = true;\n                    _iteratorError3 = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                            _iterator3.return();\n                        }\n                    } finally {\n                        if (_didIteratorError3) {\n                            throw _iteratorError3;\n                        }\n                    }\n                }\n\n                this.setup_controllers(posRange, this.m, this.r, v, vRange);\n                this.controlBox = new ControlBox(this, this.tag, this.getControllers(), x, y);\n                this.engine.controlBoxes.push(this.controlBox);\n            }\n        }\n    }, {\n        key: 'setup_controllers',\n        value: function setup_controllers(posRange, m, r, v, vRange) {\n            this.mController = new Controller(this, \"Mass m\", this.config.MASS_MIN, this.config.MASS_MAX, m, this.controlM);\n            this.rController = new Controller(this, \"Radius r\", this.config.RADIUS_MIN, this.config.RADIUS_MAX, r, this.controlR);\n            this.posXController = new Controller(this, \"Position x\", -posRange, posRange, this.pos[0], this.controlPos);\n            this.posYController = new Controller(this, \"Position y\", -posRange, posRange, this.pos[1], this.controlPos);\n            this.vRhoController = new Controller(this, \"Velocity ρ\", 0, vRange, v[0], this.controlV);\n            this.vPhiController = new Controller(this, \"Velocity φ\", -180, 180, rad2deg(v[1]), this.controlV);\n        }\n    }, {\n        key: 'getControllers',\n        value: function getControllers() {\n            return [this.mController, this.rController, this.posXController, this.posYController, this.vRhoController, this.vPhiController];\n        }\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            if (this.object) this.engine.scene.remove(this.object);\n            if (this.path) this.engine.scene.remove(this.path);\n            var i = this.engine.objs.indexOf(this);\n            this.engine.objs.splice(i, 1);\n            if (this.controlBox && this.controlBox.isOpen()) {\n                this.controlBox.close();\n            }\n        }\n    }, {\n        key: 'toString',\n        value: function toString() {\n            return JSON.stringify({ 'tag': this.tag, 'v': this.v, 'pos': this.pos });\n        }\n    }]);\n\n    return Circle;\n}();\n\nmodule.exports = Circle;\n\n},{\"../control/control_box\":3,\"../control/controller\":4,\"../matrix\":8,\"../util\":11}],10:[function(require,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Circle = require('./circle');\nvar Controller = require('../control/controller');\n\nvar _require = require('../util'),\n    rad2deg = _require.rad2deg,\n    deg2rad = _require.deg2rad,\n    spherical2cartesian = _require.spherical2cartesian;\n\nvar Sphere = function (_Circle) {\n    _inherits(Sphere, _Circle);\n\n    function Sphere() {\n        _classCallCheck(this, Sphere);\n\n        return _possibleConstructorReturn(this, (Sphere.__proto__ || Object.getPrototypeOf(Sphere)).apply(this, arguments));\n    }\n\n    _createClass(Sphere, [{\n        key: 'getGeometry',\n\n        /**\n         * Spherical coordinate system\n         * https://en.wikipedia.org/wiki/Spherical_coordinate_system\n         */\n\n        value: function getGeometry() {\n            return new THREE.SphereGeometry(this.r, 32, 32);\n        }\n    }, {\n        key: 'draw',\n        value: function draw() {\n            this.object.position.z = this.pos[2];\n            _get(Sphere.prototype.__proto__ || Object.getPrototypeOf(Sphere.prototype), 'draw', this).call(this);\n        }\n    }, {\n        key: 'controlPos',\n        value: function controlPos(e) {\n            var x = this.posXController.get();\n            var y = this.posYController.get();\n            var z = this.posZController.get();\n            this.pos = [x, y, z];\n        }\n    }, {\n        key: 'controlV',\n        value: function controlV(e) {\n            var phi = deg2rad(this.vPhiController.get());\n            var theta = deg2rad(this.vThetaController.get());\n            var rho = this.vRhoController.get();\n            this.v = spherical2cartesian(rho, phi, theta);\n        }\n    }, {\n        key: 'setup_controllers',\n        value: function setup_controllers(pos_range, m, r, v, v_range) {\n            _get(Sphere.prototype.__proto__ || Object.getPrototypeOf(Sphere.prototype), 'setup_controllers', this).call(this, pos_range, m, r, v, v_range);\n            this.posZController = new Controller(this, \"Position z\", -pos_range, pos_range, this.pos[2], this.controlPos);\n            this.vThetaController = new Controller(this, \"Velocity θ\", -180, 180, rad2deg(v[2]), this.controlV);\n        }\n    }, {\n        key: 'getControllers',\n        value: function getControllers() {\n            return [this.mController, this.rController, this.posXController, this.posYController, this.posZController, this.vRhoController, this.vPhiController, this.vThetaController];\n        }\n    }]);\n\n    return Sphere;\n}(Circle);\n\nmodule.exports = Sphere;\n\n},{\"../control/controller\":4,\"../util\":11,\"./circle\":9}],11:[function(require,module,exports){\n'use strict';\n\nvar _require = require('./matrix'),\n    mag = _require.mag,\n    dot = _require.dot;\n\nvar Util = {\n    square: function square(x) {\n        return x * x;\n    },\n\n    cube: function cube(x) {\n        return x * x * x;\n    },\n\n    polar2cartesian: function polar2cartesian(rho, phi) {\n        return [rho * Math.cos(phi), rho * Math.sin(phi)];\n    },\n\n    cartesian2polar: function cartesian2polar(x, y) {\n        return [mag([x, y]), Math.atan2(y, x)];\n    },\n\n    spherical2cartesian: function spherical2cartesian(rho, phi, theta) {\n        return [rho * Math.sin(theta) * Math.cos(phi), rho * Math.sin(theta) * Math.sin(phi), rho * Math.cos(theta)];\n    },\n\n    cartesian2spherical: function cartesian2spherical(x, y, z) {\n        var rho = mag([x, y, z]);\n        return [rho, Math.atan2(y, x), rho != 0 ? Math.acos(z / rho) : 0];\n    },\n\n    cartesian2auto: function cartesian2auto(vector) {\n        return vector.length == 2 ? Util.cartesian2polar(vector[0], vector[1]) : Util.cartesian2spherical(vector[0], vector[1], vector[2]);\n    },\n\n    rad2deg: function rad2deg(rad) {\n        return rad / Math.PI * 180;\n    },\n\n    deg2rad: function deg2rad(deg) {\n        return deg / 180 * Math.PI;\n    },\n\n    getDistance: function getDistance(x0, y0, x1, y1) {\n        return mag([x1 - x0, y1 - y0]);\n    },\n\n    rotate: function rotate(vector, matrix) {\n        return dot([vector], matrix)[0];\n    },\n\n    now: function now() {\n        return new Date().getTime() / 1000;\n    },\n\n    random: function random(min) {\n        var max = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n        if (max == null) {\n            max = min;\n            min = 0;\n        }\n        return Math.random() * (max - min) + min;\n    },\n\n    randColor: function randColor() {\n        return Math.random() * 0xffffff;\n    },\n\n    getRotationMatrix: function getRotationMatrix(x) {\n        var dir = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n        var sin = Math.sin(x * dir);\n        var cos = Math.cos(x * dir);\n        return [[cos, -sin], [sin, cos]];\n    },\n\n    getXRotationMatrix: function getXRotationMatrix(x) {\n        var dir = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n        var sin = Math.sin(x * dir);\n        var cos = Math.cos(x * dir);\n        return [[1, 0, 0], [0, cos, -sin], [0, sin, cos]];\n    },\n\n    getYRotationMatrix: function getYRotationMatrix(x) {\n        var dir = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n        var sin = Math.sin(x * dir);\n        var cos = Math.cos(x * dir);\n        return [[cos, 0, sin], [0, 1, 0], [-sin, 0, cos]];\n    },\n\n    getZRotationMatrix: function getZRotationMatrix(x) {\n        var dir = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n        var sin = Math.sin(x * dir);\n        var cos = Math.cos(x * dir);\n        return [[cos, -sin, 0], [sin, cos, 0], [0, 0, 1]];\n    }\n};\n\nmodule.exports = Util;\n\n},{\"./matrix\":8}]},{},[1])\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n"],"file":"gravity_simulator.js"}